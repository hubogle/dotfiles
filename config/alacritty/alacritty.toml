live_config_reload = true # 热更新配置

import = ["~/.config/alacritty/themes/themes/google.toml"]

[debug]
log_level = "Warn"
persistent_logging = false
print_events = false
render_timer = false

[env]
TERM = "screen-256color"

[shell]
program = "/opt/homebrew/bin/tmux"
args = ["new-session", "-A", "-D", "-s", "main"]
# args = ["-c", "$(brew --prefix)/bin/bash --login"]
# program = "sh"

[mouse]
hide_when_typing = false # 如果为“true”，则键入时光标将暂时隐藏

[scrolling]
history = 10000 #  回滚区最大行数
multiplier = 0  # 滚动距离 https://github.com/alacritty/alacritty/issues/2300

[font]
builtin_box_drawing = true                                              # true 对方框图形字符使用内置字体
size = 12
offset = { x = 0, y = 0 }                                               # 字体偏移量
normal = { family = "Hack Nerd Font Mono", style = "Regular" }
bold = { family = "Hack Nerd Font Mono", style = "Bold" }
italic = { family = "Hack Nerd Font Mono", style = "Italic" }
bold_italic = { family = "Hack Nerd Font Mono", style = "Bold Italic" }

[colors]
draw_bold_text_with_bright_colors = true # 使用明亮的颜色变体绘制粗体文本。

[bell]
animation = "EaseOutExpo" # 视觉铃声响起时闪烁屏幕的动画效果
color = "#ffffff"         # 视角动画颜色
duration = 2              # 视觉铃声闪烁的持续时间

# 包含用作分隔符的所有字符
[selection]
save_to_clipboard = true                                        # 选中文本复制
semantic_escape_chars = ''',│`|:"' ()[]{}<>	.,;?=+*^%$#@!~/\'''

[cursor.style]
#   - ▇ Block
#   - _ Underline
#   - | Beam
shape = "Block"
# Values for `blinking`:
#   - Never: 防止光标闪烁
#   - Off: 默认情况下禁用闪烁
#   - On: 默认情况下启用闪烁
#   - Always: 强制光标始终闪烁
blinking = "Always"

[[hints.enabled]]
command = "open"
post_processing = true
regex = "(ipfs:|ipns:|magnet:|mailto:|gemini:|gopher:|https:|http:|news:|file:|git:|ssh:|ftp:)[^\u0000-\u001F\u007F-<>\"\\s{-}\\^⟨⟩`]+"

[hints.enabled.mouse]
enabled = true
mods = "Shift"

[window]
# full: 边框和标题栏
# none: 无边框或标题栏
# transparent: 标题栏、透明背景和标题栏按钮
# buttonless: 标题栏、透明背景和无标题栏按钮
decorations = "buttonless"         #  窗口样式
decorations_theme_variant = "None" # 可支持的值包括“Dark”，“Light”和“None”。将其设置为“None”以使用默认主题变体。
dynamic_padding = false            # 在终端内容周围均匀分布其他填充
opacity = 0.95                     # 窗口透明度
option_as_alt = "OnlyLeft"         # Make `Option` key behave as `Alt` (macOS only):
resize_increments = true           # 调整窗口大小时是否使用各个单元格的离散步长

# 默认初始化大小
[window.dimensions]
columns = 120
lines = 40

# 窗口边缘空白
[window.padding]
x = 0
y = 0

# https://alacritty.org/config-alacritty-bindings.html
# xxd -psd
# \x14 来表示按键操作（如 Ctrl+T) 表示 \u00141
[keyboard]
bindings = [
    # MacOs only
    { key = "Key0", mods = "Command", action = "ResetFontSize" },
    { key = "Plus", mods = "Command", action = "IncreaseFontSize" },
    { key = "Minus", mods = "Command", action = "DecreaseFontSize" },
    { key = "V", mods = "Command", action = "Paste" },
    { key = "C", mods = "Command", action = "Copy" },
    { key = "M", mods = "Command", action = "Minimize" },
    { key = "Q", mods = "Command", action = "Quit" },
    { key = "F", mods = "Command|Control", action = "ToggleFullscreen" },
    { key = "K", mods = "Command", chars = "reset \n" },                  # 清空历史

    { key = "Back", action = "ReceiveChar" },              # 解决 Rime 输入法删除问题，0.11.0 版本修复问题
    { key = "Back", mods = "Command", chars = "\u0015" },  # Delete line
    { key = "Right", mods = "Option", chars = "\u001bF" }, # 向右移动一个单词
    { key = "Left", mods = "Option", chars = "\u001bB" },  # 向左移动一个单词

    # tmux windows
    { key = "E", mods = "Command", chars = "\u0060\u0005" }, # Command + e 上次访问
    { key = "Key1", mods = "Command", chars = "\u00601" },   # Command + 1 tmux 第一个窗口
    { key = "Key2", mods = "Command", chars = "\u00602" },
    { key = "Key3", mods = "Command", chars = "\u00603" },
    { key = "Key4", mods = "Command", chars = "\u00604" },
    { key = "Key5", mods = "Command", chars = "\u00605" },
    { key = "Key6", mods = "Command", chars = "\u00606" },
    { key = "Key7", mods = "Command", chars = "\u00607" },
    { key = "Key8", mods = "Command", chars = "\u00608" },
    { key = "Key9", mods = "Command", chars = "\u00609" },

    # tmux windows 访问
    { key = "LBracket", mods = "Command", chars = "\u0060p" }, # Command + [ 上个窗口
    { key = "RBracket", mods = "Command", chars = "\u0060n" }, # Command + ] 下个窗口
    { key = "Tab", mods = "Option|Shift", chars = "\u0060p" }, # 上个窗口
    { key = "Tab", mods = "Option", chars = "\u0060n" },       # 下个窗口

    # tmux windwos 修改
    { key = "T", mods = "Command", chars = "\u0060c" },            # 新建 tab
    { key = "W", mods = "Command|Shift", chars = "\u0060&" },      # 关闭 windows
    { key = "Comma", mods = "Command", chars = "\u0060," },        # , 重命名 windows
    { key = "Period", mods = "Command|Shift", chars = "\u0060." }, # 修改当前窗口编号

    # tmux panel
    { key = "D", mods = "Command|Shift", chars = "\u0060%" },      # 垂直切分
    { key = "D", mods = "Command", chars = "\u0060\"" },           # 水平切分
    { key = "Return", mods = "Option", chars = "\u0060z" },        # 当前 pane 全屏
    { key = "Return", mods = "Command|Shift", chars = "\u0060 " }, # 切换 pane 布局
    { key = "W", mods = "Command", chars = "\u0060x" },            # 关闭 pane

    { key = "J", mods = "Option", chars = "\u0060j" },
    { key = "K", mods = "Option", chars = "\u0060k" },
    { key = "L", mods = "Option", chars = "\u0060l" },
    { key = "H", mods = "Option", chars = "\u0060h" },

    # tmux session
    { key = "H", mods = "Command", chars = "\u0060\u0061" }, # 新建 Session

    # tmux other
    { key = ";", mods = "Command", chars = "\u0060:" },       # 输入命令
    { key = "I", mods = "Command", chars = "\u0060I" },       # 触发 aichat 输入
    { key = "I", mods = "Command|Shift", chars = "\u0060y" }, # 同步输入 tmux 命令
    { key = "G", mods = "Command", chars = "\u0060G" },       # open navi

    # vim 提供模拟 ctrl(control) + number 命令
    { key = "Key1", mods = "Control", chars = "\u001b[49;5u" },
    { key = "Key2", mods = "Control", chars = "\u001b[50;5u" },
    { key = "Key3", mods = "Control", chars = "\u001b[51;5u" },
    { key = "Key4", mods = "Control", chars = "\u001b[52;5u" },
    { key = "Key5", mods = "Control", chars = "\u001b[53;5u" },
    { key = "Key6", mods = "Control", chars = "\u001b[54;5u" },
    { key = "Key7", mods = "Control", chars = "\u001b[55;5u" },
    { key = "Key8", mods = "Control", chars = "\u001b[56;5u" },
    { key = "Key9", mods = "Control", chars = "\u001b[57;5u" },

    # 映射给 vim 使用
    { key = "P", mods = "Command", chars = "\u0002p" },
    { key = "S", mods = "Command", chars = "\u001b:w\u000a" },  # Type <escape>:w<enter> to save vim
    { key = "D", mods = "Option", chars = "\u001b:vsp\u000a" }, # Type <escape>:w<enter> to save vim

    { key = "Escape", mods = "Command", command = { program = "/opt/homebrew/bin/im-select", args = [
        "com.apple.keylayout.ABC",
    ] } }, # command + esc 切换 abc
]
