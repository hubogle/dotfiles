unbind C-b									# 解除默认前缀
set -g prefix ` 							# 重新设置前缀键为 ` -g表示全局global
bind ` send-prefix                          # 按2次 ` 键,即可将 ` 键当成正常字符发送出去
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Reloaded OK!" # 重新载入配置绑定快捷键为r

set-environment -g PATH "/opt/homebrew/bin:$PATH" # tmux 运行 run 前启动命令，否则出现return1
#========================常用命令======================
# prefix + ! 将 pane 变为 windows
#
#=====================================================
# 系统设置
# set 是的别名set-option。
# set -g 用于设置全域选项-ga 并将值附加到现有设置。
#=====================================================
set -g default-command "/opt/homebrew/bin/zsh"
set -g default-shell "/opt/homebrew/bin/zsh"
set -g base-index 1                             # 设置窗口的起始下标为1
set -g pane-base-index 1                        # 设置面板的起始下标为1
set -g mouse on                                 # 开启鼠标支持
set -g mode-keys vi                             # 采用vim的操作方式
set -g status-position top                      # 设定状态栏的位置
set -g renumber-windows on                      # 自动重新编号 window
# set -g allow-rename off
#setw -g automatic-rename off                   # 频繁的命令行操作，将频繁触发重命名，比较浪费CPU性能

set-option -g display-time 5000                 # 提示信息的持续时间；设置足够的时间以避免看不清提示，单位为毫秒
set-option -g repeat-time 1000                  # 控制台激活后的持续时间；设置合适的时间以避免每次操作都要先激活控制台，单位为毫秒

# 隐藏状态栏快捷键
bind v if -F '#{s/off//:status}' 'set status off' 'set status on'

#=====================================================
# 颜色设置
# https://unix.stackexchange.com/questions/645810/tmux-black-text-on-black-background-bottom-line
#=====================================================
set -g monitor-activity on 				  # 非当前窗口有内容更新时在状态栏通知
set -g default-terminal "screen-256color"    # 支持256色显示，echo $TERM 查看
set -g message-style "bg=#202529, fg=#91A8BA" # 指定消息通知的前景、后景色
set -ag terminal-overrides ",xterm-256color:RGB"
#setw -g mode-style 'fg=colour8 bg=colour8'
setw -g mode-style  "bg=#202529, fg=#91A8BA"

#=====================================================
# 操作设置
# 调整窗口大小，按完 ` 后 option + ↑
#=====================================================
# 通过前缀+KJHL快速切换, -r 按键重复 500ms 内
bind -r k select-pane -U 					# 绑定k为↑
bind -r j select-pane -D 					# 绑定j为↓
bind -r h select-pane -L 					# 绑定h为←
bind -r l select-pane -R 					# 绑定l为→

# 面板创建配置
unbind '"'
bind - splitw -v -c '#{pane_current_path}' #垂直方向新增面板，默认进入当前目录
unbind %
bind | splitw -h -c '#{pane_current_path}' # 水平方向新增面板，默认进入当前目录

#=====================================================
# tmux中复制模式通常使用复制模式的步骤如下:
#   1. 输入 <[>      进入复制模式
#   2. 按下 <空格键> 开始复制，移动光标选择复制区域
#   3. 按下 <回车键> 复制选中文本并退出复制模式
#   4. 按下 <]>      粘贴文本
# 开启vi风格后，支持vi的C-d、C-u、hjkl等快捷键
# brew install reattach-to-user-namespace
#=====================================================
## buffer缓存复制到Mac系统粘贴板
#bind-key C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
## Mac系统粘贴板内容复制到会话
#bind-key C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - \; paste-buffer -d"
## 绑定y键为复制选中文本到Mac系统粘贴板
#bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
## 鼠标拖动选中文本，并复制到Mac系统粘贴板
#bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"

set -g @open 'x'            # 快捷打开文件
set -g @open-editor 'C-x'   # 默认编辑器

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'dracula/tmux'	# 主题通过 tpm 插件管理下载
set -g @plugin 'tmux-plugins/tmux-open'

## 主题配置 ###
# available colors: white, gray, dark_gray, light_purple, dark_purple, cyan, green, orange, red, pink, yellow
set -g @dracula-plugins "cpu-usage network time"
set -g @dracula-cpu-usage-colors "orange red" # 自定义背景色
set -g @dracula-network-colors "cyan dark_gray" # 自定义背景色

set -g @dracula-show-powerline false # 箭头分隔
# set -g @dracula-show-left-sep      # 配合 powerline 使用
# set -g @dracula-show-right-sep 
set -g @dracula-show-flags true     # 窗口标识
set -g @dracula-refresh-rate 60     # 刷新间隔
set -g @dracula-show-left-icon ☺
set -g @dracula-left-icon-padding 1
set -g @dracula-border-contrast true	# 启用高对比度窗格边框
set -g @dracula-cpu-usage-label "CPU"
set -g @dracula-show-timezone false # 禁用时区
# set -g @dracula-ram-usage-label "≣"

# 安装插件 prefix + I 大写 I
# 卸载插件 prefix + u 大 U 更新 小 u 卸载
run '~/.config/tmux/plugins/tpm/tpm'

#====================tmux插件=================================
# https://github.com/kevinhwang91/fzf-tmux-script/tree/main/panes
# prefix+w在tmux的新窗口中调用脚本
# prefix+;在窗口和会话中选择最后一个窗格
# ctrl-x：杀死目标窗格
# alt-p：切换预览以了解窗格的详细信息
set -s focus-events on

# replace ~/.local/bin/fzf-panes.tmux with fzf-panes.tmux under your PATH
if-shell '[ -f ~/.config/tmux/plugins/fzf-panes.tmux ]' {
#   if you want to exclude specified session, please set @fzf_panes_ex_session_pat
#   for example, value equal to '^(floating)$', will exclude panes in session named 'floating':
#   set -g '@fzf_panes_ex_session_pat' '^(floating)$'
    set-hook -g pane-focus-in[10] \
    "run -b 'bash ~/.config/tmux/plugins/fzf-panes.tmux update_mru_pane_ids'"
    bind w run -b 'bash ~/.config/tmux/plugins/fzf-panes.tmux new_window'
    bind \; run -b 'bash ~/.config/tmux/plugins/fzf-panes.tmux select_last_pane'
} {
    set-hook -ug pane-focus-in[10]
    bind w choose-tree -Z
}
#==============================================================
# set -g set-clipboard off # 禁用选择粘贴
# set -ga terminal-overrides ',xterm*:smcup@:rmcup@'
# set -ga terminal-overrides ',xterm-256color:smcup@:rmcup@'  # https://superuser.com/questions/310251/use-terminal-scrollbar-with-tmux/314620#314620
