unbind C-b									# 解除默认前缀
set -g prefix ` 							# 重新设置前缀键为 ` -g表示全局global
bind ` send-prefix                          # 按2次 ` 键,即可将 ` 键当成正常字符发送出去
bind r source-file ~/.tmux.conf \; display-message "Reloaded OK!" # 重新载入配置绑定快捷键为r

#set-environment -g PATH "/opt/homebrew/bin:/opt/homebrew/sbin" # tmux 运行 run 前启动命令
#set-environment -g PATH "/opt/homebrew/bin:$PATH" # tmux 运行 run 前启动命令

#=====================================================
# 系统设置
#=====================================================
set -g default-command "/opt/homebrew/bin/zsh"
set -g default-shell "/opt/homebrew/bin/zsh"
set -g base-index 1     					  # 设置窗口的起始下标为1
set -g pane-base-index 1					  # 设置面板的起始下标为1
set -g mouse on						          # 开启鼠标支持
set -g mode-keys vi		    			          # 采用vim的操作方式
set -g status-position top     				          # 设定状态栏的位置
set -g renumber-windows on					  # 自动重新编号 window

setw -g allow-rename off
#setw -g automatic-rename off    # 频繁的命令行操作，将频繁触发重命名，比较浪费CPU性能

# 隐藏状态栏快捷键
bind v if -F '#{s/off//:status}' 'set status off' 'set status on'


#=====================================================
# 颜色设置
# https://unix.stackexchange.com/questions/645810/tmux-black-text-on-black-background-bottom-line
#=====================================================
setw -g monitor-activity on 				  # 非当前窗口有内容更新时在状态栏通知
set -g message-style "bg=#202529, fg=#91A8BA" # 指定消息通知的前景、后景色
#set -g default-terminal "xterm-256color"	  # echo $TERM 查看
set -ag terminal-overrides ",xterm-256color:RGB"
set-option -g default-terminal "screen-256color"
#setw -g mode-style 'fg=colour8 bg=colour8'

setw -g mode-style  "bg=#202529, fg=#91A8BA"

#=====================================================
# 操作设置
# 调整窗口大小，按完 ` 后 option + ↑
#=====================================================
# 通过前缀+KJHL快速切换, -r 按键重复 500ms 内
bind -r k select-pane -U 					# 绑定k为↑
bind -r j select-pane -D 					# 绑定j为↓
bind -r h select-pane -L 					# 绑定h为←
bind -r l select-pane -R 					# 绑定l为→

# 面板创建配置
unbind '"'
bind - splitw -v -c '#{pane_current_path}' #垂直方向新增面板，默认进入当前目录
unbind %
bind | splitw -h -c '#{pane_current_path}' # 水平方向新增面板，默认进入当前目录

#=====================================================
# tmux中复制模式通常使用复制模式的步骤如下:
#   1. 输入 <[>      进入复制模式
#   2. 按下 <空格键> 开始复制，移动光标选择复制区域
#   3. 按下 <回车键> 复制选中文本并退出复制模式
#   4. 按下 <]>      粘贴文本
# 开启vi风格后，支持vi的C-d、C-u、hjkl等快捷键
# brew install reattach-to-user-namespace
#=====================================================
## buffer缓存复制到Mac系统粘贴板
#bind-key C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
## Mac系统粘贴板内容复制到会话
#bind-key C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - \; paste-buffer -d"
## 绑定y键为复制选中文本到Mac系统粘贴板
#bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
## 鼠标拖动选中文本，并复制到Mac系统粘贴板
#bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"

## tmux-fzf-url ###
# 需要bash升级到5.0版本, 快捷键 ` + u
# set -g @fzf-url-bind 'x'
set -g @fzf-url-history-limit '2000'
set -g @fzf-url-fzf-options '-w 50% -h 50% --multi -0 --no-preview --no-border'
#set -g @fzf-url-bind 'l'

## 主题配置 ###
set -g @dracula-plugins "cpu-usage ram-usage network time"
set -g @dracula-network-colors "pink dark_gray" # 自定义背景色

set -g @dracula-show-powerline true
#set -g @dracula-show-right-sep 
set -g @dracula-show-flags true     # 窗口标识
set -g @dracula-refresh-rate 60     # 刷新间隔
set -g @dracula-border-contrast false
set -g @dracula-show-left-icon ☺
set -g @dracula-left-icon-padding 1
set -g @dracula-border-contrast true	# 启用高对比度窗格边框
set -g @dracula-cpu-usage-label "⚛︎"
set -g @dracula-ram-usage-label "≣"
set -g @dracula-show-timezone false # 禁用时区

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'dracula/tmux'	# 主题通过 tpm 插件管理下载
#set -g @plugin 'wfxr/tmux-fzf-url' # 无需鼠标即可从浏览器快速打开网址
set -g @plugin 'tmux-plugins/tmux-open'

# 安装插件 prefix + I 大写 I
# 卸载插件 prefix + u 大 U 更新 小 u 卸载
run -b '~/.tmux/plugins/tpm/tpm'
